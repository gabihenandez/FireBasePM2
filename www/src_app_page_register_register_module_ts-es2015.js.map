{"version":3,"file":"src_app_page_register_register_module_ts-es2015.js","mappings":"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","sources":["./src/app/page/register/register-routing.module.ts","./src/app/page/register/register.module.ts","./src/app/page/register/register.page.ts","./src/app/page/register/register.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatInputModule} from '@angular/material/input';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatInputModule,\n    MatSliderModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  user = {\n    usuario:'',\n    password:'',\n    apellido: '',\n    email:'',\n    passwordConf:'',\n    flagUsuario: false,\n    flagPass: false,\n    flagPassConf: false,\n    flagEmail:false,\n  }\n\n  constructor(private router:Router) { }\n\n  ngOnInit() {\n  }\n\n  onKeyUp(event: any){\n    let newValue = event.target.value;\n    console.log(newValue);\n    let regExp = new RegExp('^[A-Za-z0-9? ]+$');\n    if(!regExp.test(newValue)){\n      event.target.value = newValue.slice(0, -1);\n    }\n    let usuarios = new RegExp(\"^[A-Za-z0-9]*$\");\n    if(!usuarios.test(this.user.usuario)){\n      \n      this.user.flagUsuario = false;\n    }else{\n      \n      this.user.flagUsuario = true;\n    }\n  }\n\n  // onKeyUpApellido(event: any){\n  //   let newValue = event.target.value;\n  //   console.log(newValue);\n \n  //   let regExp = new RegExp('^[A-Za-z0-9? ]+$');\n \n  //   if(!regExp.test(newValue)){\n  //     event.target.value = newValue.slice(0, -1);\n  //   }\n  // }\n\n  onKeyUpPass(event: any){\n    let newValue = event.target.value;\n    let regExp = new RegExp('^[A-Za-z0-9*#&$%]*$');\n    if(!regExp.test(newValue)){\n      event.target.value = newValue.slice(0, -1);\n    }\n\n    let password = new RegExp(\"(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[*#&$%])\");\n\n    if(event.target.name==\"password\"){\n      if(!password.test(this.user.password)){\n        this.user.flagPass = false;\n      }else{\n        this.user.flagPass = true;\n      }\n    }\n    if(event.target.name==\"passwordConf\"){\n      if(!password.test(this.user.passwordConf)){\n        this.user.flagPassConf = false;\n      }else{\n        this.user.flagPassConf = true;\n      }\n    }\n    \n  }\n\n\n\n  onKeyUpEmail(event: any){\n    let newValue = event.target.value;\n    console.log(newValue);\n    let regExp = new RegExp(\"^[A-Za-z0-9-@.#-$%&'*_]*$\");\n    if(!regExp.test(newValue)){\n      event.target.value = newValue.slice(0, -1);\n    }\n    let email = new RegExp(\"[a-zA-Z0-9.#$%&'*_-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\");\n    if(!email.test(this.user.email)){\n      this.user.flagEmail =false;\n    }else{\n      this.user.flagEmail = true;\n    }\n  }\n\n  async onSubmit(_form: NgForm) {\n    if(this.user.password == this.user.passwordConf){\n      if(this.user.password.length>=8 && this.user.passwordConf.length>=8 && this.user.usuario.length>=8){\n      alert(\"Registro exitoso\")\n       this.router.navigate(['/home']);\n      }else{\n        alert(\"El nombre de usuario no cumple con las condiciones\")\n      }\n      \n    }else{\n      alert(\"Las contraseñas no son iguales\")\n    }\n  } \n  } \n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" text=\\\"Regresar\\\" color=\\\"primary\\\" mode=\\\"ios\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content style=\\\"text-align: center !important;\\\" >\\n    <form class=\\\"example-form\\\" #formUser=\\\"ngForm\\\">\\n      <br>\\n      <ion-row>\\n        <ion-col>\\n          <mat-form-field class=\\\"example-full-width\\\" >\\n            <mat-label style=\\\"color: white;\\\">Usuario</mat-label>\\n            <input type=\\\"text\\\" #userCont matInput name=\\\"usuario\\\" [(ngModel)]=\\\"user.usuario\\\" \\n            maxlength=\\\"30\\\"\\n            minlength=\\\"8\\\"\\n            placeholder=\\\"Usuario\\\" (keyup)=\\\"onKeyUp($event)\\\"\\n            onkeypress=\\\"if(this.value.length==30) return false;\\\"\\n            required>\\n            <mat-hint aling=\\\"end\\\">{{userCont.value.length}} /30</mat-hint>\\n          </mat-form-field>\\n          <br>\\n          <br>\\n          <mat-form-field class=\\\"example-full-width\\\" >\\n            <mat-label style=\\\"color: white;\\\">Correo Electronico</mat-label>\\n            <input type=\\\"email\\\" matInput name=\\\"email\\\"\\n            placeholder=\\\"Correo\\\"\\n            [(ngModel)]=\\\"user.email\\\" \\n            (keyup)=\\\"onKeyUpEmail($event)\\\"\\n            required>\\n          </mat-form-field>\\n          <br>\\n          <br>\\n          <mat-form-field class=\\\"example-full-width\\\" >\\n            <mat-label style=\\\"color: white;\\\">Contraseña</mat-label>\\n            <input type=\\\"password\\\" #passCont matInput name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" \\n            maxlength=\\\"20\\\"\\n            minlength=\\\"8\\\"\\n            placeholder=\\\"Contraseña\\\" (keyup)=\\\"onKeyUpPass($event)\\\"\\n            onkeypress=\\\"if(this.value.length==20) return false;\\\"\\n            required>\\n            <mat-hint aling=\\\"end\\\">{{passCont.value.length}} /20</mat-hint>\\n          </mat-form-field>\\n          <br>\\n          <br>\\n          <mat-form-field class=\\\"example-full-width\\\" >\\n            <mat-label style=\\\"color: white;\\\">Confirmar Contraseña</mat-label>\\n            <input type=\\\"password\\\" #confPassCont matInput name=\\\"passwordConf\\\" [(ngModel)]=\\\"user.passwordConf\\\" \\n            maxlength=\\\"20\\\"\\n            minlength=\\\"8\\\"\\n            placeholder=\\\"Confirmar contraseña\\\" (keyup)=\\\"onKeyUpPass($event)\\\"\\n            onkeypress=\\\"if(this.value.length==20) return false;\\\"\\n            required>\\n            <mat-hint aling=\\\"end\\\">{{confPassCont.value.length}} /20</mat-hint>\\n          </mat-form-field>\\n          <br>\\n          <br>\\n          <ion-button  (click)=\\\"onSubmit(formUser) \\\"  color=\\\"success\\\" [disabled]=\\\" user.flagEmail==false ||\\n          user.flagUsuario==false || user.flagPass == false || user.flagPassConf==false\\\">Aceptar</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}